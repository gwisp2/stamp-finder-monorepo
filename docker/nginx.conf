user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;

    gzip on;
    gzip_types application/json;

    server {
        root /non_existent;
        listen 80;

        rewrite ^/search$ /index.html last;

        location / {
            root /app/html;
            index /index.html;
            include /etc/nginx/mime.types;
        }

        location /api/ {
            # nginx is smart enough to crash when upstream can't be dns-resolved.
            # using a variable is a workaround.
            resolver 127.0.0.11 valid=30s;
            set $upstream_uwsgi sf-backend-uwsgi;
            uwsgi_pass $upstream_uwsgi:5000;
            include uwsgi_params;
        }

        location /static/ {
            root /app/html;
            expires 1y;
            add_header Pragma public;
            add_header Cache-Control "public";
            include /etc/nginx/mime.types;
        }

        location /data/images/ {
            root /app;
            expires 1y;
            add_header Pragma public;
            add_header Cache-Control "public";
            include /etc/nginx/mime.types;
        }

        location /data/ {
            root /app;
            include /etc/nginx/mime.types;
        }
    }
}
